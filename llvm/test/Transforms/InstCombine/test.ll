; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 4
; RUN: opt < %s -passes=instcombine -S | FileCheck %s

@e = internal global i32 0, align 4
@b = internal global i32 1755906428, align 4

; Function Attrs: nounwind uwtable
define internal fastcc void @i() {
; CHECK-LABEL: define internal fastcc void @i() {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    store i1 true, ptr @e, align 1
; CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr @b, align 4
; CHECK-NEXT:    [[OR_COND:%.*]] = icmp eq i32 [[TMP0]], 1755906428
; CHECK-NEXT:    br i1 [[OR_COND]], label [[IF_END:%.*]], label [[IF_THEN:%.*]]
; CHECK:       if.then:
; CHECK-NEXT:    call void @bar96_()
; CHECK-NEXT:    br label [[IF_END]]
; CHECK:       if.end:
; CHECK-NEXT:    store i1 true, ptr @e, align 1
; CHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr @b, align 4
; CHECK-NEXT:    [[TMP2:%.*]] = trunc i32 [[TMP1]] to i8
; CHECK-NEXT:    [[CONV:%.*]] = xor i8 [[TMP2]], 5
; CHECK-NEXT:    [[CMP_I:%.*]] = icmp slt i8 [[TMP2]], 0
; CHECK-NEXT:    [[SHR_I:%.*]] = select i1 [[CMP_I]], i8 0, i8 5
; CHECK-NEXT:    [[COND_I:%.*]] = ashr i8 [[CONV]], [[SHR_I]]
; CHECK-NEXT:    [[CMP_I3:%.*]] = icmp sgt i8 [[COND_I]], 2
; CHECK-NEXT:    br i1 [[CMP_I3]], label [[IF_END_I:%.*]], label [[IF_THEN_I:%.*]]
; CHECK:       if.then.i:
; CHECK-NEXT:    call void @bar3_()
; CHECK-NEXT:    br label [[IF_END_I]]
; CHECK:       if.end.i:
; CHECK-NEXT:    [[TOBOOL_NOT_I:%.*]] = icmp eq i8 [[COND_I]], 0
; CHECK-NEXT:    [[DOTB_I:%.*]] = load i1, ptr @e, align 1
; CHECK-NEXT:    [[TMP3:%.*]] = select i1 [[TOBOOL_NOT_I]], i1 true, i1 [[DOTB_I]]
; CHECK-NEXT:    br i1 [[TMP3]], label [[G_EXIT:%.*]], label [[IF_THEN3_I:%.*]]
; CHECK:       if.then3.i:
; CHECK-NEXT:    call void @foo()
; CHECK-NEXT:    br label [[G_EXIT]]
; CHECK:       g.exit:
; CHECK-NEXT:    store i32 0, ptr @b, align 4
; CHECK-NEXT:    ret void
;
entry:
  store i1 true, ptr @e, align 1
  %0 = load i32, ptr @b, align 4
  %or.cond = icmp eq i32 %0, 1755906428
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @bar96_()
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  store i1 true, ptr @e, align 1
  %1 = load i32, ptr @b, align 4
  %2 = trunc i32 %1 to i8
  %conv = xor i8 %2, 5
  %conv.i = sext i8 %conv to i32
  %cmp.i = icmp slt i8 %conv, 0
  %shr.i = select i1 %cmp.i, i32 0, i32 5
  %cond.i = ashr i32 %conv.i, %shr.i
  %conv4.i = trunc i32 %cond.i to i8
  %conv2 = sext i8 %conv4.i to i32
  %cmp.i3 = icmp sgt i32 %conv2, 2
  br i1 %cmp.i3, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @bar3_()
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end
  %tobool.not.i = icmp eq i32 %conv2, 0
  %.b.i = load i1, ptr @e, align 1
  %3 = select i1 %tobool.not.i, i1 true, i1 %.b.i
  br i1 %3, label %g.exit, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  call void @foo()
  br label %g.exit

g.exit:                                           ; preds = %if.end.i, %if.then3.i
  store i32 0, ptr @b, align 4
  ret void
}

declare void @bar3_()
declare void @bar96_()
declare void @foo()
