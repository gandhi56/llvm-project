; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=load-store-vectorizer -S < %s | FileCheck %s

target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

define amdgpu_kernel void @mixed_types_0(ptr addrspace(4) %kernarg.segment) {
; CHECK-LABEL: define amdgpu_kernel void @mixed_types_0(
; CHECK-SAME: ptr addrspace(4) [[KERNARG_SEGMENT:%.*]]) {
; CHECK-NEXT:    [[PTR:%.*]] = load ptr addrspace(3), ptr addrspace(4) [[KERNARG_SEGMENT]], align 16
; CHECK-NEXT:    [[DATA_AS_INT_KERNARG_OFFSET:%.*]] = getelementptr inbounds i8, ptr addrspace(4) [[KERNARG_SEGMENT]], i64 4
; CHECK-NEXT:    [[DATA:%.*]] = load <2 x half>, ptr addrspace(4) [[DATA_AS_INT_KERNARG_OFFSET]], align 4
; CHECK-NEXT:    [[I1:%.*]] = atomicrmw fadd ptr addrspace(3) [[PTR]], <2 x half> [[DATA]] syncscope("agent") seq_cst, align 4
; CHECK-NEXT:    ret void
;
  %ptr = load ptr addrspace(3), ptr addrspace(4) %kernarg.segment, align 16
  %data.as.int.kernarg.offset = getelementptr inbounds i8, ptr addrspace(4) %kernarg.segment, i64 4
  %data = load <2 x half>, ptr addrspace(4) %data.as.int.kernarg.offset, align 4
  %i1 = atomicrmw fadd ptr addrspace(3) %ptr, <2 x half> %data syncscope("agent") seq_cst, align 4
  ret void
}
